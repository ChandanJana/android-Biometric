name: Build and Create APK

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:

  build: # defines a job called build
    name: üî® Build # [optional] name of the job
    runs-on: ubuntu-latest # the job will be executed on ubuntu runner. Other include: Microsoft Windows & MacOS runners
    steps: # groups together all the steps that run in build job

      # Checks out code from the VCS to the runner
      - name: Checkout code # [optional] specifies the name of the step
        uses: actions/checkout@v4 # specifies which action and version to execute ie. checkout@v2

      # Setup JDK Version 11 in the runner
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: '18'

      # Allow permissions to make gradle executable - This can removed by adding the gradlew file permission
      # directly into the repository using `git update-index --chmod=+x gradlew`

      - name: Grant execute permissions to Gradle wrapper
        run: chmod +x ./gradlew

      # Execute gradle build command with stacktrace flag
      - name: Build with gradle
        run: ./gradlew build --stacktrace # Execute gradle script to build project

  lint:
    needs: [ build ]
    runs-on: ubuntu-latest
    name: üîç Lint
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Upload html test report
        uses: actions/upload-artifact@v4
        with:
          name: lint.html
          path: app/build/reports/lint-results-debug.html

  unit-test:
    needs: [ lint ]
    runs-on: ubuntu-latest
    name: üß™ Unit Tests
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: '18'

      - name: Grant execute permissions to Gradle wrapper
        run: chmod +x ./gradlew

      - name: Run tests
        run: ./gradlew test

      - name: Upload test report
        uses: actions/upload-artifact@v4
        with:
          name: unit_test_report
          path: app/build/reports/tests/testDebugUnitTest/

  generate-apk:
    #needs: [ unit-test ]
    runs-on: ubuntu-latest
    name: ‚öôÔ∏è Generate APK
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: '18'

      - name: Grant execute permissions to Gradle wrapper
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew assembleRelease

      - name: Rename APK
        run: mv app/build/outputs/apk/release/app-release.apk app/build/outputs/apk/release/Biometric-V_${{ steps.version.outputs.versionName }}.apk

      - name: Move APK to artifacts
        run: |
          mkdir -p artifacts
          mv app/build/outputs/apk/release/Biometric-V_${{ steps.version.outputs.versionName }}.apk artifacts/

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: my-app-release
          path: artifacts/Biometric-V_${{ steps.version.outputs.versionName }}.apk
